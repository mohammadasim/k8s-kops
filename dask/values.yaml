---
# nameOverride: dask
# fullnameOverride: dask

scheduler:
  name: scheduler
  image:
    repository: "daskdev/dask"
    tag: 2.11.0
    pullPolicy: IfNotPresent
    # See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    pullSecrets:
    #  - name: regcred
  replicas: 1
  # serviceType: "ClusterIP"
  # serviceType: "NodePort"
  serviceType: "LoadBalancer"
  servicePort: 8786
  resources: 
   limits:
     cpu: 1
     memory: 1G
   requests:
     cpu: 1
     memory: 500Mi
  tolerations: []
  nodeSelector: {
    failure-domain.beta.kubernetes.io/zone: eu-west-1a
  }
  affinity: {}

webUI:
  name: webui
  servicePort: 80
  ingress:
    enabled: false
    tls: false
    # secretName: dask-scheduler-tls
    hostname: dask-ui.example.com
    annotations:
     # kubernetes.io/ingress.class: "nginx"
     # secretName: my-tls-cert
     # kubernetes.io/tls-acme: "true"

worker:
  name: worker
  image:
    repository: "daskdev/dask"
    tag: 2.11.0
    pullPolicy: IfNotPresent
    # dask_worker: "dask-cuda-worker"
    dask_worker: "dask-worker"
    pullSecrets:
    #  - name: regcred
  replicas: 2
  aptPackages: >-
  default_resources:  # overwritten by resource limits if they exist
    cpu: 1
    memory: "2GiB"
#   env:
#    - name: EXTRA_CONDA_PACKAGES
#      value: numba xarray -c conda-forge
#    - name: EXTRA_PIP_PACKAGES
#      value: s3fs dask-ml --upgrade
  resources: 
   limits:
     cpu: 1
     memory: 500Mi
  #   #  nvidia.com/gpu: 1
   requests:
     cpu: 1
     memory: 250Mi
  #    nvidia.com/gpu: 1
  tolerations: []
  nodeSelector: {}
  affinity: {}
  port: ""

jupyter:
  name: jupyter
  enabled: true
  image:
    repository: "daskdev/dask-notebook"
    tag: 2.11.0
    pullPolicy: IfNotPresent
    pullSecrets:
    #  - name: regcred
  replicas: 1
  # serviceType: "ClusterIP"
  # serviceType: "NodePort"
  serviceType: "LoadBalancer"
  servicePort: 80
  # This hash corresponds to the password 'dask'
  password: 'sha1:aae8550c0a44:9507d45e087d5ee481a5ce9f4f16f37a0867318c'
  env:
  #  - name: EXTRA_CONDA_PACKAGES
  #    value: "numba xarray -c conda-forge"
  #  - name: EXTRA_PIP_PACKAGES
  #    value: "s3fs dask-ml --upgrade"
  args:
  #  - "start.sh"
  #  - "jupyter"
  #  - "lab"
  extraConfig: |-
    # Extra Jupyter config goes here
    # E.g
    # c.NotebookApp.port = 8888
  resources: 
   limits:
     cpu: 200m
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 256Mi
  tolerations: []
  nodeSelector: {}
  affinity: {}
  ingress:
    enabled: false
    tls: false
    # secretName: dask-jupyter-tls
    hostname: dask-jupyter.example.com
    annotations:
      # kubernetes.io/ingress.class: "nginx"
      # secretName: my-tls-cert
      # kubernetes.io/tls-acme: "true"